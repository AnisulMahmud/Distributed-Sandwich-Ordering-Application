# This is the docker-compose-yml file that must be able to start

version: "4"

services:

  server-a:
    # Change the image information to match your server A image
    image: anisul-mahmud/server-a-image:latest
    depends_on:
      - rapid-runner-rabbit
      - mongo
    command:
      [
        "./utils/wait-for-it.sh",
        "rapid-runner-rabbit:5672",
        "--",
        "npm",
        "start"
      ]
    build:
      dockerfile: Dockerfile
      context: ./backend/server-a
    ports:
      - "8080:8080"
    expose:
      - "8080"
    networks:
      - backend

  # rapid-runner-rabbit:
  #   image:
  #   ports:
  #   expose:
  #   networks:
  # RabbitMQ service
  rapid-runner-rabbit:
    image: rabbitmq:latest # RabbitMQ Docker image
    ports:
      - "5672" # Port mapping for RabbitMQ
    expose:
      - "5672" # Expose port for RabbitMQ
    networks:
      - backend # Connect RabbitMQ to the backend network

  # Server B service
  server-b:

    image: anisul-mahmud/server-b-image:latest
    # Build configuration for server B
    command:
      [
        "./utils/wait-for-it.sh",
        "rapid-runner-rabbit:5672",
        "--",
        "npm",
        "start"
      ]
    build:
      dockerfile: Dockerfile # Path to the Dockerfile for server B
      context: ./backend/server-b # Context directory for building server B image
    ports:
      - "8081"
    expose:
      - "8081"
    networks:
      - backend # Connect server B to the backend network

  # databases
  # database-service would go here.
  #database:
  mongo:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    networks:
      - backend

networks:
  backend:

    # volumes:
volumes:
  mongo-data:
